version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: swift
      POSTGRES_PASSWORD: swift
      POSTGRES_DB: swiftdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  order-api:
    build: ./services/order-api
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - postgres
      - rabbitmq

  cms-adapter:
    build: ./services/cms-adapter
    ports:
      - "3002:3000"
    environment:
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
      - cms-soap-server

  wms-adapter:
    build: ./services/wms-adapter
    ports:
      - "3003:3000"
    environment:
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
      - wms-tcp-server

  ros-adapter:
    build: ./services/ros-adapter
    ports:
      - "3004:3000"
    environment:
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
      - ros-rest-server

  notification:
    build: ./services/notification
    ports:
      - "3005:3000"
    environment:
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq

  delivery:
    build: ./services/delivery
    ports:
      - "3006:3000"
    environment:
      - RABBIT_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
      - postgres

  # Mock external systems
  cms-soap-server:
    build: ./mocks/cms-soap-server
    ports:
      - "4001:4000"

  wms-tcp-server:
    build: ./mocks/wms-tcp-server
    ports:
      - "4002:4000"

  ros-rest-server:
    build: ./mocks/ros-rest-server
    ports:
      - "4003:4000"

  # Frontend UI services
  client-portal:
    build: ./ui/client-portal
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
    depends_on:
      - gateway
    # Developer note: Access at http://localhost:5000

  driver-app:
    build: ./ui/driver-app
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
    depends_on:
      - gateway
    # Developer note: Access at http://localhost:5001

  # API Gateway
  gateway:
    image: nginx:alpine
    container_name: swift-gateway
    ports:
      - "8080:80"
    volumes:
      - ./infra/gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - order-api
      - cms-adapter
      - wms-adapter
      - ros-adapter
      - notification
      - delivery
    # Developer note: Update nginx.conf in infra/gateway to change routing rules.

  # Keycloak (optional authentication)
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: swiftdb
      KC_DB_USERNAME: swift
      KC_DB_PASSWORD: swift
    command: start-dev
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    volumes:
      - ./infra/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    # Developer note: Access admin UI at http://localhost:8081 (admin/admin).

volumes:
  db_data:
